---
title: "EDS 213: Databases & Data Management; Assignment 6.3"
author: "Anna Ramji"
date: "2024-05-13"
---

### Setup

```{r}
# setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```



```{r}
# install.packages("duckdb")
library(dplyr)
library(dbplyr)
library(DBI)
library(duckdb)
library(tidyverse)
library(here)
```

## Connecting to database

```{r connect}
# Connect to the database
conn <- DBI::dbConnect(duckdb::duckdb(), dbdir = here("week3/database.db"))
```


At the conclusion of the ASDN project the PIs decided to hand out first, second, and third prizes to the observers who measured the most eggs. Who won?

## Loading & storing tables

```{r}
# Load tables as tbls
egg_table <- tbl(conn, "Bird_eggs")
nest_table <- tbl(conn, "Bird_nests")
p_table <- tbl(conn, "Personnel")
```

## Joining & Summarizing to show top 3 observers

```{r}

eggs_obs_join <- nest_table %>%
  # first join with eggs table to get the number of eggs measured per observer
  inner_join(egg_table, by = c("Nest_ID" = "Nest_ID")) %>% 
  # group by Observer 
  group_by(Observer) %>%
  #and summarize to get total_eggs count
  summarize(total_eggs = n()) %>%
  # inner join to get the full names of the observers, 
  # keeping only rows with matches in both tables
  # ("Name" is full name in Personnel table, "Abbreviation in p_table = "Observer" in nest_table)
  inner_join(p_table, by = c("Observer" = "Abbreviation")) %>%
  # select relevant columns
  select(Name, total_eggs) %>% 
  # show in descending order
  arrange(desc(total_eggs)) %>% 
  # only show top 3 observers (for prize/award purposes!)
  head(3)

eggs_obs_join
```

Vanessa Loverti won 1st place!

## Showing SQL Query

```{r}
show_query(eggs_obs_join)
```

 If you used multiple R statements, did dbplyr create a temporary table, or did it manage to do everything in one query? Did it limit to the first three rows using an R expression or an SQL LIMIT clause?
 
**`dbplyr` did NOT create a temporary table, and managed to do everything in one query. It limited to the first three rows using an SQL LIMIT clause (LIMIT 3).**
